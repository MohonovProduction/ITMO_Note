{"version":3,"file":"js/775.ac50b908.js","mappings":"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","sources":["webpack://design_notes/./src/views/GeneratorView.vue","webpack://design_notes/./src/views/GeneratorView.vue?6217"],"sourcesContent":["<template>\n  <div class=\"generator-container\">\n    <h1>Запись конпсекта</h1>\n\n    <!-- Основной контент -->\n    <div v-if=\"isAuthenticated\" class=\"content-section\">\n\n      <!-- Секция с метаданными -->\n      <div class=\"metadata-section\">\n        <TextField\n          id=\"title\"\n          label=\"Заголовок:\"\n          v-model=\"title\"\n          placeholder=\"Введите заголовок\"\n          :error=\"errors.title\"\n        >\n          <template #button>\n            <BaseButton @click=\"handleTitleMagic\" icon=\"wand_stars\" iconOnly />\n          </template>\n        </TextField>\n        <TextField\n          id=\"description\"\n          label=\"Описание:\"\n          v-model=\"description\"\n          placeholder=\"Введите описание\"\n          :error=\"errors.description\"\n        >\n          <template #button>\n            <BaseButton @click=\"handleDescriptionMagic\" icon=\"wand_stars\" iconOnly />\n          </template>\n        </TextField>\n        <SelectField\n          id=\"category\"\n          label=\"Категория:\"\n          v-model=\"category\"\n          :options=\"categoryOptions\"\n          :is-loading=\"isLoadingCategories\"\n          :error=\"errors.category\"\n        />\n        <div class=\"checkbox-field\">\n          <input\n            type=\"checkbox\"\n            id=\"isPublic\"\n            v-model=\"isPublic\"\n          />\n          <label for=\"isPublic\">Сделать публичным</label>\n        </div>\n      </div>\n\n      <!-- Секция с промптом -->\n      <div class=\"prompt-section\">\n        <TextAreaField\n          id=\"prompt\"\n          label=\"Промпт:\"\n          v-model=\"prompt\"\n          placeholder=\"Введите промпт для форматирования текста\"\n          :error=\"errors.prompt\"\n        />\n        <BaseButton @click=\"formatText\" class=\"format-button\" icon=\"wand_stars\" iconOnly />\n      </div>\n\n      <!-- Секция с текстом -->\n      <div class=\"text-section\">\n        <TextAreaField\n          id=\"content\"\n          label=\"Текст:\"\n          v-model=\"content\"\n          placeholder=\"Введите или вставьте текст для форматирования\"\n          :error=\"errors.content\"\n        />\n      </div>\n\n      <!-- Кнопки действий -->\n      <div class=\"button-group\">\n        <SubmitButton \n          :is-submitting=\"isSubmitting\"\n          text=\"Сохранить\"\n          icon=\"save\"\n          @click=\"saveContent\"\n        />\n        <BaseButton variant=\"clear\" @click=\"clearForm\" icon=\"delete\">Очистить форму</BaseButton>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BaseButton from '@/components/atoms/BaseButton.vue'\nimport SubmitButton from '@/components/atoms/SubmitButton.vue'\nimport TextField from '@/components/atoms/TextField.vue'\nimport SelectField from '@/components/atoms/SelectField.vue'\nimport TextAreaField from '@/components/atoms/TextAreaField.vue'\nimport notesApi from '@/api/notes'\nimport { mapState, mapGetters, mapActions } from 'vuex';\n\nexport default {\n  name: 'GeneratorView',\n  components: {\n    BaseButton,\n    SubmitButton,\n    TextField,\n    SelectField,\n    TextAreaField\n  },\n  data() {\n    return {\n      isSubmitting: false,\n      prompt: this.loadFromStorage()?.prompt || '',\n      content: this.loadFromStorage()?.content || '',\n      title: this.loadFromStorage()?.title || '',\n      description: this.loadFromStorage()?.description || '',\n      category: this.loadFromStorage()?.category || '',\n      isPublic: this.loadFromStorage()?.isPublic || false,\n      categoryOptions: [],\n      isLoadingCategories: false,\n      generatedText: '',\n      isGenerating: false,\n      errors: {\n        title: '',\n        description: '',\n        category: '',\n        content: '',\n        prompt: ''\n      }\n    };\n  },\n  computed: {\n    ...mapState('notes', ['loading']),\n    ...mapGetters('auth', ['isAuthenticated']),\n    ...mapGetters('notes', ['categories'])\n  },\n  created() {\n    this.checkAuth();\n  },\n  watch: {\n    prompt(newValue) {\n      this.saveToStorage();\n      if (this.errors.prompt) {\n        this.errors.prompt = '';\n      }\n    },\n    content(newValue) {\n      this.saveToStorage();\n      if (this.errors.content) {\n        this.errors.content = '';\n      }\n    },\n    title(newValue) {\n      this.saveToStorage();\n      if (this.errors.title) {\n        this.errors.title = '';\n      }\n    },\n    description(newValue) {\n      this.saveToStorage();\n      if (this.errors.description) {\n        this.errors.description = '';\n      }\n    },\n    category(newValue) {\n      this.saveToStorage();\n      if (this.errors.category) {\n        this.errors.category = '';\n      }\n    },\n    isPublic(newValue) {\n      this.saveToStorage();\n    }\n  },\n  methods: {\n    ...mapActions('notes', ['createNote', 'formatNote', 'fetchCategories']),\n    ...mapActions('ui', ['openAuthModal', 'closeAuthModal', 'addNotification']),\n    \n    checkAuth() {\n      const token = localStorage.getItem('token');\n      const user = localStorage.getItem('user');\n      if (!(token && user)) {\n        this.openAuthModal();\n      } else if (this.isAuthenticated) {\n        this.loadCategories();\n      }\n    },\n    saveToStorage() {\n      const data = {\n        prompt: this.prompt,\n        content: this.content,\n        title: this.title,\n        description: this.description,\n        category: this.category,\n        isPublic: this.isPublic\n      };\n      localStorage.setItem('generator_data', JSON.stringify(data));\n    },\n    loadFromStorage() {\n      const data = localStorage.getItem('generator_data');\n      return data ? JSON.parse(data) : null;\n    },\n    clearStorage() {\n      localStorage.removeItem('generator_data');\n    },\n    async loadCategories() {\n      try {\n        this.isLoadingCategories = true;\n        await this.fetchCategories();\n        this.categoryOptions = this.categories.map(category => ({\n          value: category.name,\n          label: category.name\n        }));\n      } catch (error) {\n        console.error('Ошибка загрузки категорий:', error);\n      } finally {\n        this.isLoadingCategories = false;\n      }\n    },\n    async formatText() {\n      if (!this.prompt.trim()) {\n        this.errors.prompt = 'Промпт обязателен';\n        return;\n      }\n\n      if (!this.content.trim()) {\n        this.errors.content = 'Текст обязателен';\n        return;\n      }\n\n      try {\n        const response = await this.formatNote({\n          text: this.content,\n          prompt: this.prompt\n        });\n        this.content = response;\n        this.addNotification({ message: 'Текст успешно отформатирован', type: 'success' });\n      } catch (error) {\n        console.error('Ошибка при форматировании:', error);\n        this.addNotification({ message: 'Ошибка при форматировании', type: 'error' });\n      }\n    },\n    validateForm() {\n      this.errors = {\n        title: '',\n        description: '',\n        category: '',\n        content: '',\n        prompt: ''\n      };\n\n      let isValid = true;\n\n      if (!this.title.trim()) {\n        this.errors.title = 'Заголовок обязателен';\n        isValid = false;\n      }\n\n      if (!this.description.trim()) {\n        this.errors.description = 'Описание обязательно';\n        isValid = false;\n      }\n\n      if (!this.category) {\n        this.errors.category = 'Категория обязательна';\n        isValid = false;\n      }\n\n      if (!this.content.trim()) {\n        this.errors.content = 'Текст обязателен';\n        isValid = false;\n      }\n\n      return isValid;\n    },\n    async saveContent() {\n      if (!this.validateForm()) {\n        return;\n      }\n\n      if (this.isSubmitting) {\n        return;\n      }\n\n      this.isSubmitting = true;\n      try {\n        const user = JSON.parse(localStorage.getItem('user'));\n        const noteData = {\n          title: this.title.trim(),\n          description: this.description.trim(),\n          category: String(this.category),\n          userId: user.id,\n          isPublic: Boolean(this.isPublic),\n          text: String(this.content.trim())\n        };\n\n        await this.createNote(noteData);\n        this.addNotification({ message: 'Текст успешно сохранен', type: 'success' });\n        this.clearForm();\n      } catch (error) {\n        console.error('Ошибка при сохранении:', error);\n        this.addNotification({ message: 'Ошибка при сохранении', type: 'error' });\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    clearForm() {\n      this.prompt = '';\n      this.content = '';\n      this.title = '';\n      this.description = '';\n      this.category = '';\n      this.isPublic = false;\n      this.clearStorage();\n    },\n    handleAuthClose() {\n      this.closeAuthModal();\n    },\n    handleAuthSuccess() {\n      this.closeAuthModal();\n      this.loadCategories();\n    },\n    async handleGenerate() {\n      if (!this.isAuthenticated) {\n        this.openAuthModal();\n        return;\n      }\n      \n      this.isSubmitting = true;\n      try {\n        const response = await this.formatNote({\n          text: this.content,\n          prompt: this.prompt\n        });\n        this.content = response;\n      } catch (error) {\n        console.error('Ошибка при генерации текста:', error);\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    async handleSave() {\n      if (!this.isAuthenticated) {\n        this.openAuthModal();\n        return;\n      }\n      \n      this.isSubmitting = true;\n      try {\n        const noteData = {\n          title: 'Сгенерированная заметка',\n          description: 'Заметка, созданная с помощью генератора',\n          category: this.category,\n          userId: 0,\n          isPublic: false,\n          text: this.content\n        };\n        \n        await this.createNote(noteData);\n        this.clearForm();\n      } catch (error) {\n        console.error('Ошибка при сохранении заметки:', error);\n      } finally {\n        this.isSubmitting = false;\n      }\n    },\n    handleTitleMagic() {\n      if (!this.content) {\n        this.addNotification({ message: 'В тексте должен быть заголовок перового уровня', type: 'error' });\n        return;\n      }\n\n      const h1Match = this.content.match(/^#\\s+(.+)$/m);\n      \n      if (h1Match && h1Match[1]) {\n        this.title = h1Match[1].trim();\n        this.addNotification({ message: 'Заголовок успешно извлечен', type: 'success' });\n      } else {\n        this.addNotification({ message: 'Заголовок первого уровня не найден', type: 'warning' });\n      }\n    },\n    handleDescriptionMagic() {\n      if (!this.content) {\n        this.addNotification({ message: 'В поле Текст нет текста', type: 'error' });\n        return;\n      }\n\n      // Удаляем заголовки (строки, начинающиеся с #)\n      let textWithoutHeaders = this.content.replace(/^#+\\s+.+$/gm, '');\n      \n      // Удаляем markdown форматирование\n      textWithoutHeaders = textWithoutHeaders\n        .replace(/\\*\\*(.*?)\\*\\*/g, '$1') // жирный текст\n        .replace(/\\*(.*?)\\*/g, '$1')     // курсив\n        .replace(/`(.*?)`/g, '$1')       // код\n        .replace(/\\[(.*?)\\]\\(.*?\\)/g, '$1') // ссылки\n        .replace(/^\\s*[-*+]\\s+/gm, '')   // маркированные списки\n        .replace(/^\\s*\\d+\\.\\s+/gm, '')   // нумерованные списки\n        .trim();\n\n      if (textWithoutHeaders) {\n        // Берем первые 100 символов и добавляем многоточие, если текст был обрезан\n        this.description = textWithoutHeaders.length > 100 \n          ? textWithoutHeaders.substring(0, 100) + '...'\n          : textWithoutHeaders;\n        this.addNotification({ message: 'Описание успешно извлечено', type: 'success' });\n      } else {\n        this.addNotification({ message: 'Не удалось извлечь описание', type: 'warning' });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.generator-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: var(--spacing-6);\n}\n\nh1 {\n  font-size: var(--font-size-3xl);\n  color: var(--color-primary);\n  margin-bottom: var(--spacing-6);\n  text-align: center;\n}\n\nh2 {\n  font-size: var(--font-size-xl);\n  color: var(--color-gray-800);\n  margin-bottom: var(--spacing-4);\n  text-align: center;\n}\n\n.auth-section {\n  text-align: center;\n  padding: var(--spacing-8);\n  background-color: var(--color-gray-50);\n  border-radius: var(--radius-lg);\n  margin-bottom: var(--spacing-6);\n}\n\n.auth-section p {\n  color: var(--color-gray-600);\n  margin-bottom: var(--spacing-4);\n}\n\n.content-section {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-6);\n}\n\n.prompt-section,\n.text-section {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-2);\n}\n\nlabel {\n  font-weight: var(--font-weight-medium);\n  color: var(--color-gray-700);\n}\n\n.textarea-field {\n  width: 100%;\n  min-height: 150px;\n  padding: var(--spacing-4);\n  border: 1px solid var(--color-gray-300);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  font-family: var(--font-family-base);\n  line-height: 1.6;\n  resize: vertical;\n  transition: all var(--transition-normal);\n}\n\n.textarea-field:focus {\n  border-color: var(--color-primary);\n  outline: none;\n  box-shadow: 0 0 0 2px var(--color-primary-light);\n}\n\n.format-button {\n  align-self: flex-end;\n  margin-top: var(--spacing-2);\n}\n\n.button-group {\n  display: flex;\n  gap: var(--spacing-4);\n  margin-top: var(--spacing-4);\n}\n\n.metadata-section {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-4);\n  margin-bottom: var(--spacing-4);\n}\n\n.input-group {\n  display: flex;\n  flex-direction: column;\n  gap: var(--spacing-2);\n}\n\n.input-field {\n  width: 100%;\n  padding: var(--spacing-3);\n  border: 1px solid var(--color-gray-300);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  transition: all var(--transition-normal);\n}\n\n.input-field:focus {\n  border-color: var(--color-primary);\n  outline: none;\n  box-shadow: 0 0 0 2px var(--color-primary-light);\n}\n\n.select-field {\n  width: 100%;\n  padding: var(--spacing-3);\n  border: 1px solid var(--color-gray-300);\n  border-radius: var(--radius-md);\n  font-size: var(--font-size-base);\n  background-color: white;\n  cursor: pointer;\n  transition: all var(--transition-normal);\n}\n\n.select-field:focus {\n  border-color: var(--color-primary);\n  outline: none;\n  box-shadow: 0 0 0 2px var(--color-primary-light);\n}\n\n.checkbox-field {\n  display: flex;\n  align-items: center;\n  gap: var(--spacing-2);\n  margin-top: var(--spacing-2);\n}\n\n.checkbox-field input[type=\"checkbox\"] {\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  accent-color: var(--color-primary);\n}\n\n.checkbox-field label {\n  cursor: pointer;\n  user-select: none;\n}\n\n@media (max-width: 768px) {\n  .generator-container {\n    padding: var(--spacing-4);\n  }\n\n  h1 {\n    font-size: var(--font-size-2xl);\n  }\n\n  .button-group {\n    flex-direction: column;\n  }\n\n  .metadata-section {\n    gap: var(--spacing-3);\n  }\n}\n\n@media (max-width: 480px) {\n  .generator-container {\n    padding: var(--spacing-3);\n  }\n\n  h1 {\n    font-size: var(--font-size-xl);\n  }\n\n  .auth-section {\n    padding: var(--spacing-4);\n  }\n\n  .textarea-field {\n    min-height: 120px;\n    padding: var(--spacing-3);\n  }\n}\n</style>","import { render } from \"./GeneratorView.vue?vue&type=template&id=6e359090&scoped=true\"\nimport script from \"./GeneratorView.vue?vue&type=script&lang=js\"\nexport * from \"./GeneratorView.vue?vue&type=script&lang=js\"\n\nimport \"./GeneratorView.vue?vue&type=style&index=0&id=6e359090&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6e359090\"]])\n\nexport default __exports__"],"names":["class","isAuthenticated","id","label","title","placeholder","error","errors","button","handleTitleMagic","icon","iconOnly","description","handleDescriptionMagic","category","options","categoryOptions","isLoadingCategories","type","isPublic","for","prompt","formatText","content","isSubmitting","text","saveContent","variant","clearForm","name","components","BaseButton","SubmitButton","TextField","SelectField","TextAreaField","data","this","loadFromStorage","generatedText","isGenerating","computed","created","checkAuth","watch","newValue","saveToStorage","methods","token","localStorage","getItem","user","loadCategories","openAuthModal","setItem","JSON","stringify","parse","clearStorage","removeItem","fetchCategories","categories","map","value","console","trim","response","formatNote","addNotification","message","validateForm","isValid","noteData","String","userId","Boolean","createNote","handleAuthClose","closeAuthModal","handleAuthSuccess","handleGenerate","handleSave","h1Match","match","textWithoutHeaders","replace","length","substring","__exports__","render"],"sourceRoot":""}